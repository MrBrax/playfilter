// ==UserScript==
// @name        PlayFilter
// @namespace   MrBrax
// @description Hide unwanted shows from VOD sites.
// @include     http://www.svtplay.se/*
// @include     http://www.oppetarkiv.se/*
// @include     http://www.tv6play.se/*
// @include     http://www.tv3play.se/*
// @include     http://www.tv8play.se/*
// @include     http://www.tv10play.se/*
// @include     http://www.dplay.se/*
// @include     https://www.twitch.tv/directory/*
// @require		https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js
// @updateURL 	https://github.com/MrBrax/playfilter/raw/master/svtplay_filter.user.js
// @version     1.48
// @grant       GM_getValue
// @grant       GM_setValue
// @grant       GM_addStyle
// ==/UserScript==

// TODO: Transition from jQuery
// TODO: Transition from the old observer

SVTPlayFilter = {};
SVTPlayFilter.IMG_CROSS 		= "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAC30lEQVRYhe2WP2gTURzHf2CEIh1ErGCb97uHdsjQoWCHDh0yuChWOrTQocPl/S4hFIcMHXQqTgXBURw6duiQ0cHBwcFBUbHo4lAwSMrd/V7ADBk6dDiHXNK7y+XuCs0N4g/eknt3n+/3/f68APyPnMKV1rIW9J6ROi6qRq5wjWqFkXqM5PnrVM9sT+cCZ0FrjHQUgHuM9K1j1G5PHB7j3GOkMwcr6xOHj3HezSX/E4Hb0ixptPY0qiYL+shI7eDHGamlUa1c6rF3pXmdhar7QC9puagalwb37tWuOgY9YbR+pIEZ6dRF9TTp2G1pljwoFzLBT+asokbrTQZwJueBZx9O5qxiItwpWmU/n1HQcSDnp2zQW995VnjgRCqPYuFjPuSwUHUPygVG6jCS5wpaAADQM9vTadXuP2/HiQvDZXUxCteomi1pTgEA6CLNDwSlCB46t4VaAvALGekguk+jWgGAfnsxkhPeYL0OFk1AgGdLs5TkfCBsIOBcsLUX2d/TsroIGulL5MFBXIoGAFeox+PgrqBNjeonG6R7d+u3RtM8IuII+u0WVsaC1uJqRBvWwxjB3dFitN5F33cFLYyctEE74MHGFUb1Ipx/+qORngXTEJ+qfs6Hzvu//WJU98PiaYMN+h6Bv7Rna9cAAMCDckGjakbbTyPtAwC4SKsa1ed059RjtLbO06buMNJzFvQ79K6gV+0i3QgdkQflgjboMLhxMMXGOQ/Au9qgQ0eaEgCgJc0pV9AmI7VGTalm4lRkVLtZ4AAAtlBLukjzemZ72pZmycHKut9y0fb0GOmMUe1mGsm2NEsZnbc5fnJG15GW1cVU8LBojOoDFvQpQ87T1jEbtJP5Ihq4z+A8CdrTSPvDSXeR6CCtMtLXOOdDgbO1m7ZQSyxozUXVcFE1HKysu9JaTr3tkiJ2UOT1BxIAINqCUecTj0jP5uf8XIC1xf07vx13F+QSLWlOXahl/oX4C5DN/R7VUqVHAAAAAElFTkSuQmCC";
SVTPlayFilter.IMG_CONFIG 		= "";
SVTPlayFilter.IMG_REFRESH 		= "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";
SVTPlayFilter.IMG_ON 			= "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAEa0lEQVR4XuXXS4hbVRzH8e+9NzfPx0zaedSZ6UhrS22hpaIUqwWhUBEUtd10ULoQdOe2CzdOZyEKLlVEUYoIPlbFQkF05cqVIBQUKRalDn1l0kySSXJzc+71V86FLNLBpK248MCHf7jMOed3/ydnmHHiOAYY+Nxh88GjclKekvnEauIH+Vp+YrNxKh56lBp6EgtD9uB47+BlX1SFKADTA8eFOJqHWDgkp+WcvCG/MTxGCBANPXme3OwXFHcW8HPgpoEe9FuyDlEEJoDeBgR1iMxx4Ji8LOfvLYDjLVHe9SVbDkBpB+S2guuAaUGvCsEN1brtRrgBnXVoV6FbLwLfyFJyLGzGvWMA6yDZubNM7oepx2D2CZh+3H6uKNDkXpjYDaVFKM6pLsi8rbmpZA3OykFBxgzgZN8nvz2rN4fJh5MNVQs7ZVHm5QEoSmEG8lLcBgXRczKTEJGT98YLYBCOKcCTeHnITUOmAulJ1RnwS5Aq2JqegEwiW5GtkJ+ycwTSYDgiz8pY34FTquBlwHFtKtOBsGZvgBMJ4KUkDeTB9QEHIgNhAEELsg1oXrfrwYXRAhiBZwg6EIX22x7UwC9A1AaMakO6EIfgOOCmAFWvD6mcFKRoqwHgqDBqgG3ANA72anXX5DqkPIiKdsO4Df2G7UpkAE9AQcSXdCILTgb6wTQg3BwlQBEAz4OgAZ2qXAMvhrgMrmvfPOpYALEguBA7tuJZsRgAJkYN0LM1FpIQ1yHlAF1VH5wYYjP8GzSKSaoAZgBYH/UWXBNDEEKvB+Ht2pWWNKHfAdO3G8lgw8gyBvp9CJP5gRiM3Bw1QE8uEvah27GCLvQCu7AxdqM4Fmy1GydhA2QwV+tg+Hnca3hODrLRgHwTcm3IdMDPgZdct8FU25F+mFy/DnQ2oN1E85P1uCCMcw0/ldM06kWy65CdgHQeUtnBlYvF8201PXtM3TZ0WtBah6Y06gA9+XjcAKvylrzN+hpkisnbZyUNfllmbJioD8aFfhvayeaNW2heshbvyuq4AZKJ7KfZeAm/CqmcVVqE9Dz4FRvGBOJC3IKegXpNqmgewLeyLNxNACOvyDbWbhxVACgvgleRScjM2o6YLvQBqrbZjXWoXoNYm8MJMffyB0lPniMy3+nNjrCQhigFqRJkpsAvQtiyZx+nVUMbwMTfJ5t3hLvrwEBHXnh99rO1bDND+XKBiWqJ2SkfzwtpNkPWalmarX20Nh6kUzrBh7WTQ5uP2YEhtYeiK1+tsmuJfxhzbv0TIloA9zMAv7vblx7ZvZPFqTJ75rZQzPk0212u1nz+SMFfrks6l2f1SvdVIl677wFk5ddLl5dXrxb45c/bR7AVz3N1BC0dwS0dQUtHsAGwQgT/RoDlvSN14MoyEWfuPkB8HzoQM/JwGX2cEQ7v383xw/t4+sACh3ZsYd9Che0zFcrl8uDnuJcj+GiT+B+cB1j58eKlN9UB504dAFaSNcYLMFYXBpaFxEryjHEN/jn9j7jy/w7wN3FQFU9HgriTAAAAAElFTkSuQmCC";
SVTPlayFilter.IMG_OFF 			= "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAEl0lEQVR4XuVXS4gdRRS9VV39fjN5Q+JExUxEhRASiUaUQDDgByIi/iKC/4AuVdyp6CJjBEFw4UbdBSGIn41hgovECCqIbhTFYHQY8EMcIoaMhHkz3a+6qtpTt4rpkXmj/caFC+/jUPVu38+593bV44myLGm5fPzld/Q3ci1wH3ADsCliNuJT4D3gq9Wcb7ruyhU6tUIDQgNkqxDiZSnE3VIKEt4MgA7m5SYP68pdWJ+G+gjwHDBNNWQFgQHp72yk6u1OqzmSqmQpubWOjLVs4MqSv1vnqDB2H4jshfoh4OiwBDgYS6jw/naz8c7YaJvazSapQCAmMoAlAzCBxBNy3BVtzCgITTnnHpBSvjtcByoCO5uperM70qJ1nTahA5QmCaovufJ+oUgXBekEBKxlUolwJAWx6LIg58ThoiimlVJf1yfgAgHM+rVWM22hAz450CAFAs6VXL3gDzEMqpa+erIxBsHO+bGkmRVTt+25+rLjn3/jaIDIQSMA9qKV16tEUYDk5I007JMIjARQvKaAWkKwT4CmEpvfP/HZHYg51AgeIVQlggY6JsYzj8951okUpKRkG8uWwd+5hEzi/HO2SxvNh6GfqvkScqduJawOMPGFSwrBVVEkQ5GIz5+QhD4kt0gqBSAjwpxuRKza78DFWDZi5Te80Ib6ynAlVpUkw0GMJHzskMSJUK2MK+zih83HQW4jdmfrHMPR4EPccl0YUrrgQM45nr1YIkEUt0hKA6WsjvZYPQKu1HFlR+3br2W89eAAvUxCbVEXZ78c7BvgAiDna54C9xtgrbNk4/n2ewMixgLYI2BM4nit9o67hD37BX/r7SxwthYBzF4DJ43xAWIQwwE5MSPuaan6qlJOzL6W/X0clPMtYlIdAjG4O1KYgudfFJYK6zsAxKCQ6j7gly4M27Ad27Mf+yNOnuXHfdxhLqJDxrqeP34awBpIAP5opfHy4ctGATIBCfZlu+gXfW0xM33qkCuH68As8FKuNWmgr0M3ECNULSUnTxWA1esEiHkDAzvYAzqgn7/64jNP/YR4NX8Nq1m94pzdkYniQSGQ0FfZ4VPHCZGc1/gzDL2IvxOO8n7BwBiOKdV4/q0PPoFJvauY2xzFAo+azPqL6eZUSW6pjSdASk9CYW/4O4jw80z3aSHPaTHrH4PfPRwnSE0C5i/2Gri9t5h9qKTc02n1qdNsUquRIrnhmZt4WWV97ZNSbyGnhYX8BEr2yTOqZMgOVMigu+ujH34/12qdp+7oCI1119FF4xfwCObne3Ru7g+a7/WQfIGyLKedE90ayet0oMJcS4nDWPfTP0gjkW8gRq/S/PsOMHJD+6/ZdgVdOt6lrZdsoNF2SvOLOZ2ZS+lnRPlVSmq0OzR7+vTjiPHEmglgdjRY5MHvZ36cnD0zQqd+WX0EkIMcY80E7KoEJrdtqdWBScR4Yc0EXLkq+9od4Bg1RVJ94ap279hC+3Zvp1uumqBdl2+g7RPrafOF66nb7S63W/sInn3s3oGGT75+lKv74uTMAXRADOgAP48xhiZQvwsVJpePh3VrEP5z+l+KBP7fBP4EPM5pk9GN3EcAAAAASUVORK5CYII=";
SVTPlayFilter.Data = {};
SVTPlayFilter.Trigger = {};
SVTPlayFilter.CurrentSite = "unknown";
SVTPlayFilter.CurrentlyHidden = 0;
SVTPlayFilter.IndexedNodes = {};
SVTPlayFilter.Ignore = {
	"undefined":true,
	"http://cdn.playstatic.mtgx.tv/static/ui/img/clip-small-placeholder.png":true
}

// html
SVTPlayFilter.HTMLCross = "<img title='Hide show permanently' class='playfilter-button-hide' src='data:image/gif;base64," + SVTPlayFilter.IMG_CROSS + "'>";
SVTPlayFilter.ConfigButton = "<img title='Config' class='hidebutton' id='playfilter-button-config' src='data:image/png;base64," + SVTPlayFilter.IMG_CONFIG + "'>";

var xml_parser = new DOMParser();
SVTPlayFilter.NodeCross = xml_parser.parseFromString(SVTPlayFilter.HTMLCross, "text/xml");
SVTPlayFilter.NodeConfig = xml_parser.parseFromString(SVTPlayFilter.ConfigButton, "text/xml");

console.log( "NodeCross", SVTPlayFilter.NodeCross );

GM_addStyle(".playfilter-bar { position:fixed; right:5px; bottom:0; padding:7px; font:14px Arial; color:#666; background: rgba(0,0,0,.4); overflow:hidden; transition:0.25s all; border-radius: 8px 8px 0 0; } ");
GM_addStyle(".playfilter-bar img { width:32px !important; height:32px !important; vertical-align:-3px; cursor:pointer; opacity:0.4; }");
GM_addStyle(".playfilter-bar:hover { color:#fff; background: rgba(0,0,0,.6); }");
GM_addStyle(".playfilter-bar:hover img { opacity: 0.6; }");
GM_addStyle(".playfilter-bar img:hover { opacity:1; }");
GM_addStyle(".playfilter-bar-button { margin-right: 5px; }");
GM_addStyle(".playfilter-bar-info { float:right; width:40px; text-align:center; }");
GM_addStyle(".playfilter-button-hide { width:16px !important; height:16px !important; vertical-align:-3px; margin-right:4px; cursor:pointer; opacity:0.6; }");
GM_addStyle(".playfilter-button-hide:hover { opacity:1; }");
GM_addStyle("#playconfig { all:initial; * { all:unset; } }");
GM_addStyle("#playconfig { font-size:18px; font: 14px Arial; background:#111; color:#dfd; padding:20px; position:fixed; width:800px; margin-left:-410px; left:50%; top:50px; z-index:9999999 }");
GM_addStyle("#playconfig h1 { font-size:24px; font-weight:bold; }");
GM_addStyle("#playconfig input, #playconfig button, #playconfig select { font-size:14px; font-family:Arial; padding:2px 6px; border:1px solid #888; background:#000; border-radius:0; margin:2px; color:#eee; }");
GM_addStyle("#playconfig select { font-size: 14px; width:800px }");
//GM_addStyle("#playconfig button { font-size:14px; font-family:monospace; padding:2px 6px; border:1px solid #0f0; background:#000; border-radius:0; margin:2px; color:#0f0; }");

SVTPlayFilter.OpenConfig = function(){

	SVTPlayFilter.LoadData();
	
	var conf = "<div id='playconfig'></div>";
	
	var w = $(conf).appendTo("body");
	
	$("<h1>PlayFilter v" + GM_info.script.version + " config (" + SVTPlayFilter.CurrentSite + ")</h1>").appendTo(w);
	
	var rearrange = $("<input type='checkbox' " + ( SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].DisableRearrange ? "checked='checked'" : "") + ">").appendTo(w);
	$("<span> Disable rearranging of items after hiding</span>").appendTo(w);

	var hidepremium = $("<br><input type='checkbox' " + ( SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].HidePremium ? "checked='checked'" : "") + ">").appendTo(w);
	$("<span> Hide premium/subscription videos</span>").appendTo(w);

	// video list
	var videolist = $("<br><br>Video list<br><select multiple size=12></select>").appendTo(w);
	var videolist_remove = $("<br><button>Remove</button>").appendTo(w).click(function(){
		$('option:selected', videolist).each(function(){
			delete SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide[ $(this).val() ];
			$(this).remove();
		});
	});

	//for(var ident in SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide){
	//	if( ident != SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide[ ident.trim() ]){
	//		SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide[ ident.trim() ] = true;
	//		delete SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide[ ident ];
	//	}
	//}

	var sortable = [];
	for(var ident in SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide){
		sortable.push( ident.trim() );
	}

	sortable.sort();

	for(var i = 0; i < sortable.length; i++){
	//$.each(SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide, function(key, value) {
		var key = sortable[i];
		if(SVTPlayFilter.Ignore[key]) continue;
		//var short = key.substring(key.length-90,key.length);
		videolist.append($("<option></option>").attr("value",key).text(key + " (" + key.length + ")")); 
	//});
	}
	
	$("<br><br><button>Save</button>").appendTo(w).click(function(){
		SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].DisableRearrange = rearrange.is(":checked");
		SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].HidePremium = hidepremium.is(":checked");
		SVTPlayFilter.SaveData();
		SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite].Update();
		w.remove();
	});
	
	$(" <button>Close</button>").appendTo(w).click(function(){
		w.remove();
	});
	
}

// helper funcs
var matches = function(el, selector) {
  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);
};

SVTPlayFilter.Trigger["svtplay"] = {

	Element: "article.play_videolist-element",

	CheckType: "article",
	CheckClass: "play_videolist-element",
	CheckContainer: "div.play_content-grid",

	Update: function(){
		//var _this = SVTPlayFilter.Trigger[ SVTPlayFilter.CurrentSite ];
		//var qs = document.querySelectorAll( _this.Element );
		//if(qs){
		//	for( i in qs ){
		//		_this.Func( qs[i] );
		//	}
		//}
	},

	Func: function(video){

		if(typeof video != "object") return;

		if(!video.querySelector){
			console.log("No querySelector for: ", typeof video, video);
			return;
		}

		//video.PFix = true;

		var ident = video.querySelector(".play_videolist-element__title-text, .play_videolist-element__title")
		var ident_text = ident ? ident.textContent.trim() : false;

		//console.info("[PlayFilter] Got video node ", ident_text);

		if(!ident_text){ console.error("Couldn't find video info: ", ident, ident_text); return; }
		var _this = SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite];
		
		if(SVTPlayFilter.InFilter(ident_text)){
			//console.info("[PlayFilter] Hide video ", ident_text);
			//video.PFix = true;
			SVTPlayFilter.CurrentlyHidden++;
			SVTPlayFilter.StatusUpdate();
			SVTPlayFilter.RemoveItem(video);
			SVTPlayFilter.InvalidLayout = true;
			return;
		}

		//if(video.PFix) return;
		
		if(!video.querySelector("img.playfilter-button-hide")){
			var text = video.querySelectorAll(".play_videolist-element__title-text, .play_videolist-element__title");
			if(!text){
				console.error("[PlayFilter] Could not find place for button: ", ident_text);
				return;
			}
			text = text[0];
			//console.log( "[PlayFilter] Found title node: ", text );
			var button = document.createElement("img");
			button.src = "data:image/png;base64," + SVTPlayFilter.IMG_CROSS;
			button.className = "playfilter-button-hide";
			button.title = "Hide show permanently";
			button.onclick = function(e){
				e.preventDefault();
				e.stopPropagation();
				SVTPlayFilter.LoadData(); // to prevent overwriting other tabs
				SVTPlayFilter.AddFilter(ident_text);
				SVTPlayFilter.SaveData();
				SVTPlayFilter.UpdateItems(null, video.parentNode);

				var popout = document.querySelector("div.play_info-popoutbox")
				if(popout){
					popout.parentNode.removeChild(popout);
				}
				//$("div.play_info-popoutbox").remove();	
				return false;
			}
			text.insertBefore(button, text.firstChild);
			//console.info("[PlayFilter] Add hide button: ", ident_text);
		}

	},

	Rearrange: function( block, force ){
		if( !force && SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].DisableRearrange ) return false;
		console.log("[PlayFilter] Rearrange all items");
		SVTPlayFilter.SetObserver(false);
		var videos;
		if(block){
			videos = block.querySelectorAll("article");
		}else{
			videos = document.querySelectorAll("div.play_js-videolist__item-container article");
		}
		var n = 0;
		var p;
		for( i in videos){
			if(!videos[i].className) continue;
			if(p != videos[i].parentNode){ console.log(videos[i] + " has different parent, stop using " + p); p = videos[i].parentNode; n = 0; }
			videos[i].className = videos[i].className.replace(/play_nth\-[0-9]+/, "play_nth-" + ( Math.floor( n % 12 ) + 1 ) );
			n++;
		}
		SVTPlayFilter.SetObserver(true);
		SVTPlayFilter.InvalidLayout = false;
	}

}

SVTPlayFilter.Trigger["oppetarkiv"] = {

	Element: "article.svtUnit",
	
	Config: function(){
		$(SVTPlayFilter.ConfigButton).appendTo("#svtoa_navigation-top").click( SVTPlayFilter.OpenConfig );
	},

	Update: function(){
		var _this = SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite];
		$( _this.Element ).each( function(){ _this.Func( $(this) ); } );
	},

	Func: function(video){
		
		var raw = video.find("img.oaImg").attr("srcset");
		var link = raw.match(/([A-Za-z0-9\/_\-.]+)/)[0];
		var _this = SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite];

		if(!link) return;
		
		if(SVTPlayFilter.InFilter(link)){
			video.remove();
			if(video.is(':last-child')) _this.Rearrange();
			return;
		}else{
			if(video.is(':last-child')) _this.Rearrange();
		}
			
		if(video.find("img.hidebutton").length==0){
			var text = video.find("h1.svt-heading-xs");
			var button = $(SVTPlayFilter.HTMLCross).prependTo(text);
			button.click(function(e){
				SVTPlayFilter.LoadData(); // to prevent overwriting other tabs
				SVTPlayFilter.AddFilter(link);
				SVTPlayFilter.SaveData();
				_this.Update();
				e.preventDefault();
				return false;
			});
		}
	},

	Rearrange: function(){
		$("div.svtGridBlock article").each(function(i){
			$(this).removeClass (function (index, css) {
				return (css.match (/(^|\s)svtNth-\S+/g) || []).join(' ');
			});
			$(this).addClass("svtNth-" + ( Math.floor( ( $(this).index() ) % 12 ) + 1 ) );
		});
	}

}

SVTPlayFilter.Trigger["mtg"] = {

	Element: "div.clip",

	Update: function(){
		var _this = SVTPlayFilter.Trigger["mtg"];
		$( _this.Element ).each( function(){ _this.Func( $(this) ); } );
	},

	Func: function(video){
		
		var link = video.attr("data-title");
		//var link = raw.match(/([A-Za-z0-9\/_\-.]+)/)[0];
		var _this = SVTPlayFilter.Trigger["mtg"];

		if(!link) return;
		
		if(SVTPlayFilter.InFilter(link)){
			video.remove();
			if(video.is(':last-child')) _this.Rearrange();
			return;
		}else{
			if(video.is(':last-child')) _this.Rearrange();
		}
			
		if(video.find("img.hidebutton").length==0){
			var text = video.find("div.clip-additional-info");
			var button = $(SVTPlayFilter.HTMLCross).prependTo(text);
			button.click(function(e){
				SVTPlayFilter.LoadData(); // to prevent overwriting other tabs
				SVTPlayFilter.AddFilter(link);
				SVTPlayFilter.SaveData();
				$(".popover").remove();
				_this.Update();
				e.preventDefault();
				return false;
			});
		}
	},

	Rearrange: function(){}

}

SVTPlayFilter.Trigger["dplay"] = {

	Element: "div.catalogue-item, a.listing-item",

	CheckClass: ["catalogue-item", "listing-item"],

	Update: function(){
		var _this = SVTPlayFilter.Trigger[ SVTPlayFilter.CurrentSite ];
		var qs = document.querySelectorAll( _this.Element );
		if(qs){
			for( i in qs ){
				_this.Func( qs[i] );
			}
		}
	},

	Func: function(video){
		
		if(!video.querySelector){
			console.log("No querySelector for: ", video, typeof video, arguments.callee);
			return;
		}

		var ident = video.querySelector("span.topLine, div.listing-item-title");
		var ident_text = ident ? ident.textContent.trim() : false;

		if(!ident_text){ console.error("Couldn't find video info: ", ident, ident_text); return; }
		var _this = SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite];

		console.info("[PlayFilter] Got video node ", ident_text);

		if( SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].HidePremium && video.querySelector("div.label-premium") ){
			console.info("[PlayFilter] Hide premium video ", ident_text);
			video.parentNode.removeChild(video);
			return;
		}
		
		if(SVTPlayFilter.InFilter(ident_text)){
			//console.info("[PlayFilter] Hide video ", ident_text);
			//video.PFix = true;
			SVTPlayFilter.CurrentlyHidden++;
			SVTPlayFilter.StatusUpdate();
			video.parentNode.removeChild(video);
			SVTPlayFilter.InvalidLayout = true;
			return;
		}
			
		if(!video.querySelector("img.playfilter-button-hide")){

			SVTPlayFilter.IndexedNodes[video] = true;

			var cat_title = video.querySelectorAll("a.catalogue-item-title");
			var list_title = video.querySelectorAll("div.listing-item-title");

			var button = document.createElement("img");
			button.src = "data:image/png;base64," + SVTPlayFilter.IMG_CROSS;
			button.className = "playfilter-button-hide";
			button.title = "Hide show permanently";
			button.onclick = function(e){
				SVTPlayFilter.LoadData(); // to prevent overwriting other tabs
				SVTPlayFilter.AddFilter(ident_text);
				SVTPlayFilter.SaveData();
				_this.Update();
				e.preventDefault();
				return false;
			}

			if( cat_title && cat_title[0] ){
				cat_title[0].insertBefore(button, cat_title[0].firstChild);
			}else if( list_title && list_title[0] ){
				list_title[0].insertBefore(button, list_title[0].firstChild);
			}
		}
	},

	Rearrange: function(){}

}

SVTPlayFilter.Trigger["twitch"] = {

	Element: "div.js-streams",

	Config: function(){
		console.log("[PlayFilter] Add config button");
		$(SVTPlayFilter.ConfigButton).appendTo("#small_home").click( SVTPlayFilter.OpenConfig );
	},

	Update: function(){
		var _this = SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite];
		$( _this.Element ).each( function(){ _this.Func( $(this) ); } );
	},

	Func: function(video){
		
		var ident = video.find("a.boxart").attr("original-title");
		//var ident = raw.match(/([A-Za-z0-9\/_\-.]+)/)[0];
		var _this = SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite];

		if(!ident) return;

		console.log("[PlayFilter] Found video with ident " + ident);
		
		if(SVTPlayFilter.InFilter(ident)){
			video.remove();
			if(video.is(':last-child')) _this.Rearrange();
			return;
		}else{
			if(video.is(':last-child')) _this.Rearrange();
		}
			
		if(video.find("img.hidebutton").length==0){
			var text = video.find("a.boxart");
			var button = $(SVTPlayFilter.HTMLCross).appendTo(text);
			button.click(function(e){
				SVTPlayFilter.LoadData(); // to prevent overwriting other tabs
				SVTPlayFilter.AddFilter(ident);
				SVTPlayFilter.SaveData();
				_this.Update();
				e.preventDefault();
				return false;
			});
		}
	},

	Rearrange: function(){}

}

if( document.querySelector("a.svtoa_logo, div.svtGridBlock") ) SVTPlayFilter.CurrentSite = "oppetarkiv";
if( document.querySelector("a.play_logo") ) SVTPlayFilter.CurrentSite = "svtplay";
if( document.querySelector("img.mtg-logo") ) SVTPlayFilter.CurrentSite = "mtg";
if( document.querySelector("div.header-dplay-logo-container") ) SVTPlayFilter.CurrentSite = "dplay";
if( location.href.match(/twitch\.tv\/directory/) ) SVTPlayFilter.CurrentSite = "twitch";

console.log("[PlayFilter] Setting site to '" + SVTPlayFilter.CurrentSite + "' on '" + location.href + "'.");

SVTPlayFilter.LoadData = function(){

	SVTPlayFilter.Data = {};
	SVTPlayFilter.Data[SVTPlayFilter.CurrentSite] = {};

	var cfg_raw = GM_getValue("SVTPlayFilter", '');
	var cfg_parsed;

	if(cfg_raw){
		try {
			cfg_parsed = JSON.parse(cfg_raw);
		}catch(e){
			console.log("invalid json data");
		}
	}

	if(cfg_parsed != undefined){

		SVTPlayFilter.Data = cfg_parsed;

		// init if new site
		if(!SVTPlayFilter.Data[SVTPlayFilter.CurrentSite]) SVTPlayFilter.Data[SVTPlayFilter.CurrentSite] = {};
		if(!SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide) SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide = {};

		// transfer old data
		if(SVTPlayFilter.Data.Hide){
			console.log("[PlayFilter] Transferring old data...")
			SVTPlayFilter.Data["svtplay"].Hide = SVTPlayFilter.Data.Hide;
			SVTPlayFilter.Data.Hide = undefined;
			GM_setValue("SVTPlayFilter", JSON.stringify( SVTPlayFilter.Data ) );
		}

		console.log( "[PlayFilter] Config loaded for " + SVTPlayFilter.CurrentSite, Object.keys(SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide).length, SVTPlayFilter.Data[SVTPlayFilter.CurrentSite] );

	}else{
		SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide = {};
	}

}

SVTPlayFilter.InFilter = function(img){
	if(SVTPlayFilter.Ignore[ img ]) return false;
	return SVTPlayFilter.Data[ SVTPlayFilter.CurrentSite ].Hide[ img ];
}

SVTPlayFilter.AddFilter = function(img){
	console.log("[PlayFilter] Adding '" + img + "' to filter for '" + SVTPlayFilter.CurrentSite + "'.");
	SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide[img] = true;
}

SVTPlayFilter.RemoveFilter = function(img){
	delete SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide[img];
}

SVTPlayFilter.RemoveItem = function(el){
	el.parentNode.removeChild(el);
	if( matches(el, ':last-child') ) SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite].Rearrange();
}

SVTPlayFilter.SaveData = function(){
	GM_setValue("SVTPlayFilter", JSON.stringify( SVTPlayFilter.Data ) );
	console.log( "[PlayFilter] Config saved", SVTPlayFilter.Data );
}

SVTPlayFilter.StatusUpdate = function(){
	console.log("[PlayFilter] Update status counters");
	var num = document.getElementById("playfilter-bar-num");
	if(num){ num.innerHTML = "<span title='Hidden'>" + SVTPlayFilter.CurrentlyHidden + "</span><br><span title='Block list size'>" + Object.keys(SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide).length + "</span>"; }else{ console.error("no num found"); }
}

SVTPlayFilter.SetObserver = function( state ){
	SVTPlayFilter.Blocked = state;
	console.log("[PlayFilter] Set observer state: " + (state ? "on" : "off") );
	var st = document.getElementById("playfilter-bar-obs");
	if(st){ st.src = "data:image/png;base64," + ( state ? SVTPlayFilter.IMG_ON : SVTPlayFilter.IMG_OFF ); }else{ console.error("no num found"); }
}

SVTPlayFilter.UpdateItems = function( sIdent, aBlock, bForce ){
	//if(SVTPlayFilter.Searching){ console.log("UpdateItems - searching " + SVTPlayFilter.Searching + ";"); return; }
	console.log("[PlayFilter] Update items, ident: " + sIdent + ", arrange: " + aBlock );
	SVTPlayFilter.SetObserver(false);
	//myObserver.disconnect();
	var vids = ( sIdent ? sIdent : document ).querySelectorAll( SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite].Element );
	if(vids){
		for(var i in vids ){
			vids[i].PFix = false;
			SVTPlayFilter.Trigger[ SVTPlayFilter.CurrentSite ].Func( vids[i] );
		}
	}
	SVTPlayFilter.Trigger[ SVTPlayFilter.CurrentSite ].Rearrange( aBlock, bForce );
	SVTPlayFilter.SetObserver(true);
	//myObserver.observe(document, obsConfig);
}

if(SVTPlayFilter.CurrentSite != "unknown"){
	SVTPlayFilter.LoadData();

	SVTPlayFilter.Data[SVTPlayFilter.CurrentSite].Hide["undefined"] = false;

	if( SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite] ){

		var cClass = SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite].CheckClass;
	
		function mutationHandler (mutationRecords) {

			if(SVTPlayFilter.Blocked){

				mutationRecords.forEach ( function (mutation) {

					//SVTPlayFilter.SetObserver(false);

					if ( mutation.type == "childList" && typeof mutation.addedNodes == "object" && mutation.addedNodes.length ) {

						//console.log("MutationEvent child");
						
						for (var J = 0, L = mutation.addedNodes.length;  J < L;  ++J) {
							//SVTPlayFilter.UpdateItems( mutation.addedNodes[J] );
							//if(mutation.addedNodes[J].PFix) continue;
							//mutation.addedNodes[J].PFix = true
							//console.log("multi level", mutation.addedNodes);
							//var vids = mutation.addedNodes[J].querySelectorAll( SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite].Element );
							//if(vids){
							//	for(var i in vids ){
							//		console.log("Mutation child func ", i, vids[i]);
							//		SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite].Func( vids[i] );
							//	}
							//}else{
							//	console.log("No mutation children");
							//}
							//console.log("!! Mutation child loop ", mutation.addedNodes[J].className );
							checkForCSS_Class(mutation.addedNodes[J], cClass)
							
						}

					}else if (mutation.type == "attributes") {
						//if(mutation.target.PFix) return;
						//mutation.target.PFix = true
						//console.log("!! MutationEvent attribute", mutation.target.className );
						//SVTPlayFilter.UpdateItems( mutation.target );
						//console.log("!! Mutation attribute func ", mutation.target);
						//checkForCSS_Class(mutation.target, cClass );
					}
				});

			}else{
				//SVTPlayFilter.SetObserver(true);
			}

			//if(SVTPlayFilter.InvalidLayout) SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite].Rearrange();
			
		}

		function checkForCSS_Class (node, className) {
			//-- Only process element nodes
			//console.log("check css", node.className );
			if (node.nodeType === 1) {

				if(node.PFix) return;
				node.PFix = true;
				
				if(typeof className == "string"){
					if (node.classList.contains(className) ) {
						//console.log("!! Mutation css func: ", node, node.className );
						SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite].Func( node );
						//SVTPlayFilter.UpdateItems( node );
						return;
					}
				}else{
					for(var i in className){
						if (node.classList.contains(className[i]) ) {
							//console.log("!! Mutation css multi func ", i, node, node.className );
							SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite].Func( node );
							//SVTPlayFilter.UpdateItems( node );
							return;
							break;
						}
					}
				}

			}else{
				//console.log("wrong nodetype");
			}
		}

		var MutationObserver = window.MutationObserver;
		var myObserver       = new MutationObserver (mutationHandler);
		var obsConfig        = {
			childList: true, attributes: true, characterData: true,
			subtree: true,   attributeFilter: ['class']
		};
		
		myObserver.observe(document, obsConfig);
		
		console.info("[PlayFilter] Add config bar");

		var place = document.createElement("div");
		place.className = "playfilter-bar";

		var button = document.createElement("img");
		button.className = "playfilter-bar-button";
		button.src = "data:image/png;base64," + SVTPlayFilter.IMG_CONFIG;
		button.addEventListener("click", SVTPlayFilter.OpenConfig );
		button.title = "Open config";

		var refresh = document.createElement("img");
		refresh.className = "playfilter-bar-button";
		refresh.src = "data:image/png;base64," + SVTPlayFilter.IMG_REFRESH;
		refresh.addEventListener("click", function(){
			SVTPlayFilter.UpdateItems(null, null, true);
		});
		refresh.title = "Refresh";

		// status of observer
		var obs = document.createElement("img");
		obs.className = "playfilter-bar-button";
		obs.id = "playfilter-bar-obs";
		obs.src = "data:image/png;base64," + SVTPlayFilter.IMG_OFF;
		obs.title = "Toggle observer";
		obs.addEventListener("click", function(){
			SVTPlayFilter.SetObserver(!SVTPlayFilter.Blocked);
		});

		// number of hidden
		var num = document.createElement("div");
		num.className = "playfilter-bar-info";
		num.id = "playfilter-bar-num";
		num.innerHTML = "0";
		num.title = "Number of items hidden";		

		place.appendChild(button);
		place.appendChild(refresh);
		place.appendChild(obs);
		place.appendChild(num);

		document.body.appendChild(place);

		SVTPlayFilter.StatusUpdate();

		SVTPlayFilter.SetObserver(false);
		var init_videos = document.querySelectorAll(SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite].Element);
		if(init_videos){
			console.log("[PlayFilter] Hide initial media (" + init_videos.length + ")");
			for( i in init_videos ){
				init_videos[i].PFix = false;
				SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite].Func( init_videos[i] );
			}
			SVTPlayFilter.Trigger[SVTPlayFilter.CurrentSite].Rearrange();
		}else{
			console.log("[PlayFilter] No containers found with media");
		}
		SVTPlayFilter.SetObserver(true);

		window.addEventListener('replacestate', function(e) {
		    console.log('buup!');
		});

		window.addEventListener('pushstate', function(e) {
		    console.log('boop!');
		});

		window.addEventListener('popstate', function(e) {
		    console.log('beep!');
		});

	}
}else{
	console.log("[PlayFilter] Unknown site");
}